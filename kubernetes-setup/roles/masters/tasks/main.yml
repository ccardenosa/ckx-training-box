---
###   - name: Setup kubelet config for cgroupfs
###     shell: |
###       cat << EOF > /tmp/kubeadm-config.yaml
###       ---
###       apiVersion: kubeadm.k8s.io/v1beta2
###       kind: InitConfiguration
###       localAPIEndpoint:
###         advertiseAddress: {{leader_master_ip}}
###         bindPort: 6443
###       ---
###       apiVersion: kubeadm.k8s.io/v1beta2
###       kind: ClusterConfiguration
###       apiServer:
###         certSANs:
###         - "{{leader_master_ip}}"
###       networking:
###         serviceSubnet: "10.96.0.0/16"
###         podSubnet: "172.16.0.0/16"
###         dnsDomain: "ecascaz-cluster.local"
###       controlPlaneEndpoint: "{{leader_master_ip}}:6443"
###       ---
###       apiVersion: kubelet.config.k8s.io/v1beta1
###       kind: KubeletConfiguration
###       cgroupDriver: cgroupfs
###       EOF

- name: Initialize the Kubernetes cluster using kubeadm
###     shell: |
###       kubeadm init --config /tmp/kubeadm-config.yaml 
  command: kubeadm init --apiserver-advertise-address="{{leader_master_ip}}" --apiserver-cert-extra-sans="{{leader_master_ip}}" --pod-network-cidr=172.16.0.0/16

- name: Create kube directory
  file:
    path: /root/.kube
    state: directory

- name: Setup kubeconfig for root user
  command: "{{ item }}"
  with_items:
   - cp -i /etc/kubernetes/admin.conf /root/.kube/config
   - chown root:root /root/.kube/config

- name: Fetch kubeconfig to local file
  fetch: src="/root/.kube/config" dest="~/.kube/config" flat="yes"

# Install Weave as CNI
# https://docs.projectcalico.org/getting-started/kubernetes/self-managed-onprem/onpremises
- name: Install calico CNI
  shell: |
    #kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
    kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

- name: Generate join command
  command: kubeadm token create --print-join-command
  register: join_command

- name: Copy join command to local file
  become: false
  local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

- name: Autocomplete and useful alias
  shell: |
    echo "source <(kubectl completion bash)" >> /root/.bashrc
    echo "alias k=kubectl" >> /root/.bashrc
    echo "alias kg='kubectl get'" >> /root/.bashrc
    echo "alias kd='kubectl describe'" >> /root/.bashrc
    echo "complete -F __start_kubectl k" >> /root/.bashrc
    echo "export do='--dry-run=client -o yaml'" >> /root/.bashrc

- name: Configure VIM minimaly
  shell: |
    echo "set expandtab" > /root/.vimrc
    echo "set tabstop=2" >> /root/.vimrc
    echo "set sw=2" >> /root/.vimrc

# Fix for vagrant environments
- name: Ensure kubelet configs are correct
  copy:
    content: |
      # Note: This dropin only works with kubeadm and kubelet v1.11+
      [Service]
      Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
      Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml"
      # This is a file that "kubeadm init" and "kubeadm join" generates at runtime, populating the KUBELET_KUBEADM_ARGS variable dynamically
      EnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env
      # This is a file that the user can use for overrides of the kubelet args as a last resort. Preferably, the user should use
      # the .NodeRegistration.KubeletExtraArgs object in the configuration files instead. KUBELET_EXTRA_ARGS should be sourced from this file.
      Environment="KUBELET_EXTRA_ARGS=--node-ip={{node_ip}}"
      EnvironmentFile=-/etc/default/kubelet
      ExecStart=
      ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS
    dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf

- name: Reload daemon
  command: systemctl daemon-reload

- name: Reload kubelet
  command: systemctl restart kubelet
